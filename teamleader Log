一： 需求分析
    
    客户需求：
    
    功能需求：
    在单个系统里面可以增删改查zelin的学生信息。

    客户需求：

        查询的功能：
            查询学生所有信息
            查询学生部分信息
            查询学生就业信息
            查询班级学生信息
            模糊检索学生姓名
        
        增添功能：
            注册学生基本信息
            完善信息
            新增班级
        
        修改功能：
            修改单个信息
            修改主要信息

        删除功能：
            搜索或模糊搜索
            确认删除内容
            删除用户信息


二： 设计
    分五个表来记录各种信息。
    
    学生表：
        SID;名字;性别；学校；电话
    学习表：
        SID;名字;教室名字；成绩；迟到次数；违纪次数
    工作表：
        SID;名字；获得工作的时间；毕业时间；工资；公司
    跳槽表：
        SID;名字;新公司；新薪水；跳槽时间
    课程表：
        教室名字；教室名字；课程名字

    建立一个几乎每一步都可进可退,实现可以在系统内自由操作，并且界面优美。

    用python 和Mysql实现。
    
    修改的时候可以对单条信息进行（增，该，删）
    删除由于不能通过delete 的形式对数据库进行单条信息的删除，所以只做用户数据的删除，单条删除放到修改模块。




三：wbs（分工及成果）

    大表哥： 1,设计表格，理顺了表结构。
            2,尝试做多表结合还有视图，虽然没有运用，但是积累了不少经验。
            3,建立了删除模块，虽然代码量不多，但是加入来模糊查询，以及多步确认保证用户误删。

    金弟弟：  1,建立了查询模块的框架，质量高。
            2,做了整个增添模块，分了注册增添和完善信息增添，测试体验感很好。
            3,参与多项组内成员的代码校验，给团队帮助。

    雪霞姐： 1,研究多表查询的实践，在初始阶段收集信息。
            2,填补查询模块
            3,尝试更多的查询功能
            4,在金弟弟出色完成任务的同时，离不开雪霞姐的监督。

    罗鹏：  1,帮助建立视图
            2,检验修改模块代码

    班长：  1,根据组员的实际情况，分工协作，提高产出效率。
            2,做修改模块
            3,负责整体代码的执行与优化。


四：总结处理的问题

    回顾点一：
    尝试用view视图解决在pymysql不能多表查询的问题。最终决定考虑不用视图，用最简单的语句来完成查找。
    mysql需要显示多个表数据时尝试的方法:
    1.使用inner join 和natural join 方式尝试拼接多张表(student和study表的拼接:当两个表所有数据齐全时可以拼接;当表一有两行数据表二只有一行数据时,只显示表一表二都有数据的行;若表一有数据,表二为空表时,则会出现拼接显示为空)
    2.使用创建视图的方法

    回顾点二：
    尝试查询表中的元组来获取相关数据，但是发现存在内嵌元组，处理过于复杂，最终放弃。 然后用简单的查询语句并传参数来执行。


    回顾点三：
    由于我们的代码中存在大量操作表格的语句，例如update  表 set ... 设计多个表的处理。 盛哥提出可以做for i in (表1,表2...) ，然后让i放进DML语句中，此类代码更为简洁。

    回顾点四：
    在处理insert into values插入多个内容时，而内容又用传参来调用，格式写法很容易出错; 此时考虑拆分单个插入。

    回顾点五：
    当一次过执行多个执行语句时，如：update....where+条件; 要注意条件的变化，如果后来语句的执行环境是建立在前面语句执行后时，要先conn.commit()前面的语句。
    例如：

        cur.execute('update study set sname="%s" where sname="%s"'%(newname,name))
        conn.commit()
        cur.execute('update student set tel="%s" wher1e sname="%s"'%(newtel,newname))
        此时sname需要变成newname而不是原来的名字，所以要注意commit.



